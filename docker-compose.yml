version: '3.8'

services:
  api:
    build: ./backend
    container_name: resume_api
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - backend

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - backend

  postgres:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: resumes
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  redis:
    image: redis
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
    - backend 

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - backend

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: dashboards
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
    networks:
      - backend


  celery:
    build: ./backend
    container_name: celery_worker
    command: celery -A app.celery_worker.celery_app worker --loglevel=info
    depends_on:
      - redis
      - api
    volumes:
      - ./backend/app:/app/app
    networks:
      - backend


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
    depends_on:
      - api
    environment:
      - REACT_APP_BACKEND_URL=http://api:8000
    stdin_open: true
    tty: true
    networks:
      - backend




networks:
  backend:



